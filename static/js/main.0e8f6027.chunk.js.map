{"version":3,"sources":["components/itemList.js","components/itemDetail.js","components/addItem.js","App.js","serviceWorker.js","index.js"],"names":["ItemList","handleDelete","item","title","_this","props","deleteItem","handleSelect","selectedItem","handleComplete","newComleted","changeComplete","addClassname","completed","renderItems","items","map","react_default","a","createElement","className","key","id","onClick","style","marginRight","disabled","marginTop","this","Component","ItemDetail","updateContext","e","preventDefault","refs","value","description","handleUpdate","handleCancel","type","placeholder","ref","AddItem","handleSubmit","trim","uuid","v4","addNewItem","alert","onSubmit","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","concat","toConsumableArray","state","filter","newArray","objectSpread","_this2","axios","get","then","res","data","marginBottom","addItem","itemList","itemDetail","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e8f6027.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ItemList extends Component {\r\n\r\n  handleDelete = (item) => {\r\n    let title = item.title\r\n    this.props.deleteItem(title)\r\n  };\r\n\r\n  handleSelect = (item) => {\r\n    this.props.selectedItem(item)\r\n  };\r\n\r\n  handleComplete = (item) => {\r\n    let newComleted = item.title;\r\n    this.props.changeComplete(newComleted)\r\n  };\r\n  \r\n  addClassname = (item) => {\r\n    if(item.completed === true){\r\n      return \"btn btn-primary btn-sm\"\r\n    }else {\r\n      return \"btn btn-secondary btn-sm\"\r\n    }\r\n  };\r\n\r\n  renderItems = () => {\r\n    if (!this.props.items){\r\n      return <div>Loading</div>\r\n    }\r\n    return this.props.items.map(item => {\r\n      return(\r\n        <ul className=\"list-group\" key = {item.id}>\r\n          <li \r\n          className=\"list-group-item d-flex justify-content-between align-items-center\" \r\n          >\r\n            <span onClick={()=>{this.handleSelect(item)}}>{item.title}</span>\r\n            <div className=\"btn-group\">\r\n              <button \r\n              className={this.addClassname(item)}\r\n              style={{marginRight:10}}\r\n              disabled={item.completed}\r\n              onClick = {() => {this.handleComplete(item)}} \r\n              >\r\n              Complete\r\n              </button>\r\n              <button className=\"btn btn-secondary btn-sm\" onClick = {() => {this.handleDelete(item)}}>Delete</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        );\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"row\" style={{marginTop:50}}>\r\n        <div className=\"col-12\">\r\n          {this.renderItems()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ItemList","import React, { Component }  from 'react';\r\n\r\n class ItemDetail extends Component{\r\n  updateContext = (e) => {\r\n    e.preventDefault(); \r\n    const id =this.props.item.id;\r\n    const title = this.refs.title.value === \"\" ? this.props.item.title:this.refs.title.value;\r\n    const description = this.refs.description.value === \"\" ? this.props.item.description:this.refs.description.value;\r\n    this.props.handleUpdate(id,title,description)\r\n    this.refs.title.value = null\r\n    this.refs.description.value = null\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    e.preventDefault();\r\n    this.refs.title.value = null\r\n    this.refs.description.value = null\r\n  }\r\n\r\n  render(){\r\n    if(this.props.item.title == null){\r\n      return null;\r\n    }\r\n\r\n    return(\r\n      <form style={{marginTop:50}} >\r\n        <div className=\"form-group\" >\r\n          <label>Task</label>\r\n          <input type=\"text\" className=\"form-control\" placeholder={this.props.item.title} ref='title'/>\r\n        </div>\r\n        <div className=\"form-group\" >\r\n          <label>Description</label>\r\n          <input type=\"text\" className=\"form-control\" placeholder={this.props.item.description} ref='description'/>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn-primary\" style={{marginRight:5}} onClick={this.updateContext}>Save</button>\r\n          <button className=\"btn btn-secondary\" style={{marginRight:5}} onClick={this.handleCancel}>Cancel</button>\r\n        </div>\r\n      </form>   \r\n    );\r\n  };\r\n};\r\nexport default ItemDetail;","import React, { Component } from 'react';\r\nimport uuid from \"uuid\";\r\n\r\nclass AddItem extends Component {\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let title = this.refs.title.value;\r\n    if (!title.trim()) {\r\n      alert(\"Please type in the title\")\r\n      return\r\n    }\r\n    let id= uuid.v4();\r\n    this.props.addNewItem({id,title})\r\n    this.refs.title.value = null\r\n  };\r\n\r\n  render(){\r\n    return(\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"form-group\" >\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"please enter your title\" ref='title'/>\r\n        </div>\r\n        <button className=\"btn btn-primary\" >Add new To-do</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n};\r\n\r\nexport default AddItem;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ItemList from './components/itemList';\nimport ItemDetail  from './components/itemDetail';\nimport AddItem from './components/addItem';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      selectedItem:''\n    }\n  };\n  componentDidMount(){\n    axios.get('https://practiceapi.devmountain.com/api/tasks')\n      .then(res => {\n        this.setState({\n          items:res.data\n        });\n      });\n  };\n  \n  addNewItem = (item) => {\n    this.setState({\n      items:[...this.state.items,item]\n    })\n  };\n  \n  deleteItem = (title) => {\n    //this.state.items.map(title => )\n    this.setState({\n      items:this.state.items.filter((item) => item.title !== title)\n    });\n  };\n\n  changeComplete = (title) => {\n    let newArray = this.state.items.map((item) => {\n      if(item.title === title){\n        return ({...item,completed:!item.completed});\n      }else{\n        return item\n      }\n    })\n    this.setState({items:newArray})\n  };\n\n  selectedItem = (item) => {\n    this.setState({\n      selectedItem:item\n    });\n  };\n\n  handleUpdate = (id,title,description) => {\n    let newArray = this.state.items.map((item) => {\n      if(item.id === id){\n        return ({...item,title:title,description:description});\n      }else{\n        return item\n      }\n    })\n    this.setState({items:newArray})\n  };\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6 col-lg-6\">\n            <h1 style={{marginBottom:50}}>TO-DO:</h1>\n            <AddItem addNewItem={this.addNewItem}/>\n            <ItemList \n              items={this.state.items}\n              deleteItem={this.deleteItem}\n              selectedItem={this.selectedItem}\n              changeComplete={this.changeComplete}/>\n          </div>\n          <div className=\"col-12 col-md-6 col-lg-6\">\n            <ItemDetail \n              item = {this.state.selectedItem}\n              handleUpdate={this.handleUpdate}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}